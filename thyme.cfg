// Thyme - скриптовый язык в Algodoo/Phun.
// Типы данных: Int, Float, Bool, String. Можно создавать списки и функции.
// Идентификаторы объявляются с помощью := и изменяются с помощью =. Идентификатор не имеет типа.

foo := 3; // Объявление нового идентификатора "foo" с начальным значением 3.
foo = [foo, "hello", true]; // Присвоение списку переменной 'foo'. Список гетерогенный.
print foo(1); // Выводит "hello".
print foo([0, 2]); // Выводит [3, true].

// Функция "isEven" принимает один аргумент и возвращает true, если он четный.
isEven := (n) => n % 2 == 0;

// Простая структура цикла 'for' в Thyme.
// Пример:
for(4, (n) => print((n + 1) + " bottles of beer on the wall."));
// Вывод:
// 1 bottle of beer on the wall.
// 2 bottles of beer on the wall.
// 3 bottles of beer on the wall.
// 4 bottles of beer on the wall.

// Реализация функции 'for'.
for = (n, what) => n <= 0 ? false : { for(n - 1, what); what(n - 1) };

// Генерация списка чисел от min до max включительно.
// Пример: 1..5 == [1, 2, 3, 4, 5]
inclusive_range = (min, max) => min > max ? [] : { [min] ++ inclusive_range(min + 1, max) };

// Определение инфиксного оператора '..' для функции inclusive_range.
infix 2 left: _ .. _ => inclusive_range;